# This file provides all instructions for constructing the yeast structural interactome and subsequent analyses. 
# All scripts run in Python 3 except for produce_ppi_models.py which runs in Python 2. 
# Install all Python modules and software listed in the file “dependencies” before running the instructions below. 

# Step 1: Create project directory
mkdir structural_interactome

# Step 2: Create subdirectory for data files from external sources
cd structural_interactome
mkdir data
cd data
mkdir external
cd external

# Step 3: Download and unzip UniProt reference sequences for Saccharomyces Cerevisiae
wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/Eukaryota/UP000002311/UP000002311_559292.fasta.gz
gunzip UP000002311_559292.fasta.gz

# Step 4: Download and unzip UniProt ID mapping table
wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/Eukaryota/UP000002311/UP000002311_559292.idmapping.gz
gunzip UP000002311_559292.idmapping.gz

# Step 5: Download UniProt reviewed human proteome list
wget -O uniprot_reviewed_yeast_proteome.list https://rest.uniprot.org/uniprotkb/stream\?format\=list\&query\=%28%28taxonomy_id%3A559292%29%29+AND+%28reviewed%3Atrue%29

# Step 6: Download and unzip PDB chain sequences and structured residue labels
wget ftp://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt
wget https://cdn.rcsb.org/etl/kabschSander/ss_dis.txt.gz
gunzip ss_dis.txt.gz

# Step 7: Download the BioGRID multi-validated protein-protein interaction dataset (Please change the version accordingly)
wget https://downloads.thebiogrid.org/Download/BioGRID/Release-Archive/BIOGRID-4.4.224/BIOGRID-MV-Physical-4.4.224.tab3.zip
unzip BIOGRID-MV-Physical-4.4.200.tab3.zip
rm BIOGRID-MV-Physical-4.4.200.tab3.zip

# Step 8: Download genetic interaction dataset from TheCellMap.org
wget https://thecellmap.org/costanzo2016/data_files/Raw%20genetic%20interaction%20datasets:%20Pair-wise%20interaction%20format.zip
unzip Raw\ genetic\ interaction\ datasets:\ Pair-wise\ interaction\ format.zip
rm Raw\ genetic\ interaction\ datasets:\ Pair-wise\ interaction\ format.zip

# Step 9: Process data files from external sources
cd ../../code
cd code
python3 process_external_data.py

# Step 10: Process reference protein interactome
python3 process_reference_interactome.py

# Step 11: Calculate Gene Ontology semantic similarity for pairs of proteins in the reference interactome
python3 calculate_interactome_gosim.py

# Step 12: BLAST interactome protein sequences against PDB SEQRES sequences
cd ../data/processed/Yeast
cp interactome_sequences.fasta ../
cd ../
makeblastdb -in pdb_seqres_reduced.fasta -dbtype prot -out pdb_seqres_db
blastp -db pdb_seqres_db -query interactome_sequences.fasta -out interactome_pdb_e-5 -evalue 1e-5
cp interactome_pdb_e-5 /Yeast

# Step 13: Produce template-annotated interactome
cd ../../code
python3 produce_template_annotated_interactome.py

# Step 14: Produce PPI template files for PPI homology modelling
python3 produce_ppi_template_files.py

# Step 15: Blast again this time against PDB chain residues that have 3D coordinates
cd ../data/processed/Yeast/model_based
makeblastdb -in ppi_template_sequences.fasta -dbtype prot -out ppi_template_seq_db
blastp -db ppi_template_seq_db -query protein_sequences.fasta -out ppi_template_blast_alignments_e100 -evalue 100 -max_hsps 1 -num_alignments 1000

# Step 16: Produce PPI alignment files for PPI homology modelling
cd ../../../../code
python3 produce_ppi_alignment_files.py

# Step 17: Produce PPI structural models
cd ../data/processed/Yeast/model_based
mkdir ppi_models
cd ppi_models
python2 ../../../../../code/produce_ppi_models.py

# Step 18: Rename PPI structural model files
cd ../../../../../code
python3 rename_models.py

# Step 19: Produce structural interactome
python3 produce_structural_interactome.py

# At this point, the structural interactome with mapped PPI interfaces can be found in the file /data/processed/Yeast/model_based/structural_interactome.txt
# Below are instructions for data analysis

# Step 20: Generate correlation between interfacial overlap and genetic interaction profile similarity
cd ../code_analysis
python3 generate_correlation.py

# Step 21: Generate data for analyzing the effects of confounding factors
python3 test_confounding_factors.py
